start_rule          = rule_decl+ EOF;

rule_decl           = RULE IDENTIFIER OPEN_BRACE rule CLOSE_BRACE;

rule                = meta_section? rule_content;

(* Rules can either have a grep section or one of the non-grep sections, but not both. *)
rule_content        = grep_section
                    | non_grep_section+;

non_grep_section   = file_metadata_section
                   | hash_section
                   | signature_section;

meta_section        = META COLON pattern_def+;

file_metadata_section = FILE_METADATA COLON file_metadata_def+;

grep_section        = GREP COLON patterns_section? condition_section;

signature_section   = SIGNATURE COLON DOUBLE_QUOTED_STRING+;

hash_section        = HASH COLON hash_expr+;

hash_expr           = hash EQUAL DOUBLE_QUOTED_STRING;

patterns_section     = PATTERNS COLON pattern_def+;

condition_section   = CONDITION COLON expr+;

file_metadata_def   = file_metadata EQUAL DOUBLE_QUOTED_STRING
                    | FILESIZE EQUAL NUMBER;

pattern_def          = IDENTIFIER EQUAL DOUBLE_QUOTED_STRING pattern_mod+
                    | IDENTIFIER EQUAL hex_string;

pattern_mod          = encodings | FIXED | NOCASE;

encodings           = ENCODINGS EQUAL ENCODINGS_LIST;

expr                = term (OR term)*;

term                = factor (AND factor)*;

factor              = OPEN_PAREN expr CLOSE_PAREN
                    | all_func_call
                    | any_func_call
                    | dual_func_call;

all_func_call       = ALL OPEN_PAREN CLOSE_PAREN;

any_func_call       = ANY OPEN_PAREN IDENTIFIER (COMMA IDENTIFIER)* CLOSE_PAREN;

dual_func_call      = dual_func OPEN_PAREN IDENTIFIER (COMMA NUMBER)? CLOSE_PAREN;

dual_func           = OFFSET
                    | COUNT_HAS_HITS
                    | COUNT
                    | LENGTH;

file_metadata       = CREATED
                    | MODIFIED
                    ;

literal             = IDENTIFIER 
                    | DOUBLE_QUOTED_STRING 
                    | NUMBER
                    ;

operator            = EQUAL_EQUAL
                    | NOT_EQUAL
                    | LESS_THAN 
                    | LESS_THAN_EQUAL
                    | GREATER_THAN
                    | GREATER_THAN_EQUAL
                    ;

hash                = MD5
                    | SHA1
                    | SHA256
                    | BLAKE3
                    ;


hex_string          = OPEN_BRACE (NUMBER|IDENTIFIER)+ CLOSE_BRACE;

single_line_comment = "//" [^\n]*;
multi_line_comment  = "/*" ([^*] | "*" [^/])* "*/";

OPEN_BRACE          = "{";
CLOSE_BRACE         = "}";
OPEN_PAREN          = "(";
CLOSE_PAREN         = ")";
COLON               = ":";
COMMA               = ",";
EOF                 = "\0";
MD5                 = "md5";
SHA1                = "sha1";
SHA256              = "sha256";
BLAKE3              = "blake3";
ANY                 = "any";
ALL                 = "all";
OFFSET              = "offset";
COUNT_HAS_HITS      = "count_has_hits";
COUNT               = "count";
LENGTH              = "length";
EQUAL_EQUAL         = "==";
NOT_EQUAL           = "!=";
LESS_THAN           = "<";
LESS_THAN_EQUAL     = "<=";
GREATER_THAN        = ">";
GREATER_THAN_EQUAL  = ">=";
AND                 = "and";
OR                  = "or";
META                = "meta";
FILE_METADATA       = "file_metadata";
SIGNATURE           = "signature";
GREP                = "grep";
HASH                = "hash";
PATTERNS            = "patterns";
CONDITION           = "condition";
RULE                = "rule";
CREATED             = "created";
MODIFIED            = "modified";
FILESIZE            = "filesize";
ENCODINGS           = "encodings";
IDENTIFIER          = [a-zA-Z_][a-zA-Z0-9_]*;
DOUBLE_QUOTED_STRING = "\""[^\"]*"\"";